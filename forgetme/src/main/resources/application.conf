{
  bootstrapServers: "..."
  keySerializer: org.apache.kafka.common.serialization.StringSerializer
  valueSerializer: com.homeaway.commons.kafka.jackson.avro.JacksonAvroSerializer
  keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
  valueDeserializer: com.homeaway.commons.kafka.jackson.avro.JacksonAvroDeserializer
  partitionAssignmentStrategy: org.apache.kafka.clients.consumer.RoundRobinAssignor
  autoCommitIntervalMs: 100
  autoOffsetReset: earliest
  schemaRegistryUrl: "..."
  topic: forgetMeRequest
  ackTopic: forgetMeRequestAckV1
  devEmail: "aguyyala@homeaway.com"
  obfuscatedKeyword: obfuscated
  maskTypeLengths: "string: 25, email: -1, number: -1,  uuid: -1, phone: -1, uniquePhone: -1, zip: -1, ipaddress: -1, date: -1"

  forgetMe {
    test.url: "..."
    stage.url: "..."
    prod.url: "..."
  }


  ae {

    jobName: ForgetMe
    portfolioName: Analytics
    portfolioId: 127517
    productId: 127525
    productName: "Analytics - Core Data"

    forgetMeQueueTbl: "DW_Config.dbo.GDPRQueue"
    PIIMetadataTbl: "DW_Config.dbo.GDPRMetadata"
    obfuscationLogTbl: "DW_Config.dbo.GDPRLog"

    test {
      registrationUuid: ...
    }

    stage {
      registrationUuid: ...
    }

    prod {
      registrationUuid: ...
    }
  }


  model.obfuscateMappingValues {
    valueToEncrypt: value_to_encrypt
    maskType: mask_type
    obfuscatedValue: obfuscated_value
    lengthLimitOfObfuscatedValue: lengthLimitOfObfuscatedValue
    metadata: metadata
  }

  model.obfuscateMapping {
    registrationUuid: registrationUuid
    requestUuid: requestUuid
    obfuscateMappingValues: obfuscateMappingValues
    createDate: createDate
    updateDate: updateDate
  }

}
